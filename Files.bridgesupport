<?xml version='1.0'?>
<!DOCTYPE signatures SYSTEM "file://localhost/System/Library/DTDs/BridgeSupport.dtd">
<signatures version='1.0'>
<struct name='AFPAlternateAddress' type='{AFPAlternateAddress=&quot;fVersion&quot;C&quot;fAddressCount&quot;C&quot;fAddressList&quot;[1C]}'/>
<struct name='AFPTagData' type='{AFPTagData=&quot;fLength&quot;C&quot;fType&quot;C&quot;fData&quot;[1C]}'/>
<struct name='AFPVolMountInfo' type='{AFPVolMountInfo=&quot;length&quot;s&quot;media&quot;I&quot;flags&quot;s&quot;nbpInterval&quot;c&quot;nbpCount&quot;c&quot;uamType&quot;s&quot;zoneNameOffset&quot;s&quot;serverNameOffset&quot;s&quot;volNameOffset&quot;s&quot;userNameOffset&quot;s&quot;userPasswordOffset&quot;s&quot;volPasswordOffset&quot;s&quot;AFPData&quot;[144c]}'/>
<struct name='AFPXVolMountInfo' type='{AFPXVolMountInfo=&quot;length&quot;s&quot;media&quot;I&quot;flags&quot;s&quot;nbpInterval&quot;c&quot;nbpCount&quot;c&quot;uamType&quot;s&quot;zoneNameOffset&quot;s&quot;serverNameOffset&quot;s&quot;volNameOffset&quot;s&quot;userNameOffset&quot;s&quot;userPasswordOffset&quot;s&quot;volPasswordOffset&quot;s&quot;extendedFlags&quot;s&quot;uamNameOffset&quot;s&quot;alternateAddressOffset&quot;s&quot;AFPData&quot;[176c]}'/>
<struct name='CatPositionRec' type='{CatPositionRec=&quot;initialize&quot;i&quot;priv&quot;[6s]}'/>
<struct name='FSCatalogBulkParam' type64='{FSCatalogBulkParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;containerChanged&quot;B&quot;reserved&quot;C&quot;iteratorFlags&quot;I&quot;iterator&quot;^{OpaqueFSIterator}&quot;container&quot;^{FSRef}&quot;maximumItems&quot;Q&quot;actualItems&quot;Q&quot;whichInfo&quot;I&quot;catalogInfo&quot;^{FSCatalogInfo}&quot;refs&quot;^{FSRef}&quot;specs&quot;^{FSSpec}&quot;names&quot;^{HFSUniStr255}&quot;searchParams&quot;^{FSSearchParams}}' type='{FSCatalogBulkParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;containerChanged&quot;B&quot;reserved&quot;C&quot;iteratorFlags&quot;I&quot;iterator&quot;^{OpaqueFSIterator}&quot;container&quot;^{FSRef}&quot;maximumItems&quot;I&quot;actualItems&quot;I&quot;whichInfo&quot;I&quot;catalogInfo&quot;^{FSCatalogInfo}&quot;refs&quot;^{FSRef}&quot;specs&quot;^{FSSpec}&quot;names&quot;^{HFSUniStr255}&quot;searchParams&quot;^{FSSearchParams}}'/>
<struct name='FSCatalogInfo' type64='{FSCatalogInfo=&quot;nodeFlags&quot;S&quot;volume&quot;s&quot;parentDirID&quot;I&quot;nodeID&quot;I&quot;sharingFlags&quot;C&quot;userPrivileges&quot;C&quot;reserved1&quot;C&quot;reserved2&quot;C&quot;createDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;contentModDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;attributeModDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;accessDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;backupDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;permissions&quot;{FSPermissionInfo=&quot;userID&quot;I&quot;groupID&quot;I&quot;reserved1&quot;C&quot;userAccess&quot;C&quot;mode&quot;S&quot;fileSec&quot;^{__FSFileSecurity}}&quot;finderInfo&quot;[16C]&quot;extFinderInfo&quot;[16C]&quot;dataLogicalSize&quot;Q&quot;dataPhysicalSize&quot;Q&quot;rsrcLogicalSize&quot;Q&quot;rsrcPhysicalSize&quot;Q&quot;valence&quot;I&quot;textEncodingHint&quot;I}' type='{FSCatalogInfo=&quot;nodeFlags&quot;S&quot;volume&quot;s&quot;parentDirID&quot;I&quot;nodeID&quot;I&quot;sharingFlags&quot;C&quot;userPrivileges&quot;C&quot;reserved1&quot;C&quot;reserved2&quot;C&quot;createDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;contentModDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;attributeModDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;accessDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;backupDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;permissions&quot;[4L]&quot;finderInfo&quot;[16C]&quot;extFinderInfo&quot;[16C]&quot;dataLogicalSize&quot;Q&quot;dataPhysicalSize&quot;Q&quot;rsrcLogicalSize&quot;Q&quot;rsrcPhysicalSize&quot;Q&quot;valence&quot;I&quot;textEncodingHint&quot;I}'/>
<struct name='FSFileOperationClientContext' type64='{FSFileOperationClientContext=&quot;version&quot;q&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}' type='{FSFileOperationClientContext=&quot;version&quot;i&quot;info&quot;^v&quot;retain&quot;^?&quot;release&quot;^?&quot;copyDescription&quot;^?}'/>
<struct name='FSForkCBInfoParam' type64='{FSForkCBInfoParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;desiredRefNum&quot;i&quot;volumeRefNum&quot;s&quot;iterator&quot;i&quot;actualRefNum&quot;s&quot;ref&quot;^{FSRef}&quot;forkInfo&quot;^{FSForkInfo}&quot;forkName&quot;^{HFSUniStr255}}' type='{FSForkCBInfoParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;desiredRefNum&quot;s&quot;volumeRefNum&quot;s&quot;iterator&quot;s&quot;actualRefNum&quot;s&quot;ref&quot;^{FSRef}&quot;forkInfo&quot;^{FSForkInfo}&quot;forkName&quot;^{HFSUniStr255}}'/>
<struct name='FSForkIOParam' type64='{FSForkIOParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;reserved1&quot;^v&quot;reserved2&quot;s&quot;forkRefNum&quot;i&quot;reserved3&quot;C&quot;permissions&quot;c&quot;ref&quot;^{FSRef}&quot;buffer&quot;*&quot;requestCount&quot;I&quot;actualCount&quot;I&quot;positionMode&quot;S&quot;positionOffset&quot;q&quot;allocationFlags&quot;S&quot;allocationAmount&quot;Q&quot;forkNameLength&quot;Q&quot;forkName&quot;^S&quot;forkIterator&quot;{CatPositionRec=&quot;initialize&quot;i&quot;priv&quot;[6s]}&quot;outForkName&quot;^{HFSUniStr255}}' type='{FSForkIOParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;reserved1&quot;^v&quot;reserved2&quot;s&quot;forkRefNum&quot;s&quot;reserved3&quot;C&quot;permissions&quot;c&quot;ref&quot;^{FSRef}&quot;buffer&quot;*&quot;requestCount&quot;I&quot;actualCount&quot;I&quot;positionMode&quot;S&quot;positionOffset&quot;q&quot;allocationFlags&quot;S&quot;allocationAmount&quot;Q&quot;forkNameLength&quot;I&quot;forkName&quot;^S&quot;forkIterator&quot;{CatPositionRec=&quot;initialize&quot;i&quot;priv&quot;[6s]}&quot;outForkName&quot;^{HFSUniStr255}}'/>
<struct name='FSForkInfo' type='{FSForkInfo=&quot;flags&quot;C&quot;permissions&quot;c&quot;volume&quot;s&quot;reserved2&quot;I&quot;nodeID&quot;I&quot;forkID&quot;I&quot;currentPosition&quot;Q&quot;logicalEOF&quot;Q&quot;physicalEOF&quot;Q&quot;process&quot;Q}'/>
<struct name='FSPermissionInfo' type='{FSPermissionInfo=&quot;userID&quot;I&quot;groupID&quot;I&quot;reserved1&quot;C&quot;userAccess&quot;C&quot;mode&quot;S&quot;fileSec&quot;^{__FSFileSecurity}}'/>
<struct name='FSRangeLockParam' type64='{FSRangeLockParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;forkRefNum&quot;i&quot;requestCount&quot;Q&quot;positionMode&quot;S&quot;positionOffset&quot;q&quot;rangeStart&quot;Q}' type='{FSRangeLockParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;forkRefNum&quot;s&quot;requestCount&quot;Q&quot;positionMode&quot;S&quot;positionOffset&quot;q&quot;rangeStart&quot;Q}'/>
<struct name='FSRef' type='{FSRef=&quot;hidden&quot;[80C]}'/>
<struct name='FSRefForkIOParam' type64='{FSRefForkIOParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;parentRef&quot;^{FSRef}&quot;nameLength&quot;Q&quot;name&quot;^S&quot;whichInfo&quot;I&quot;catInfo&quot;^{FSCatalogInfo}&quot;forkNameLength&quot;Q&quot;forkName&quot;^S&quot;permissions&quot;c&quot;reserved1&quot;C&quot;forkRefNum&quot;i&quot;newRef&quot;^{FSRef}}' type='{FSRefForkIOParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;parentRef&quot;^{FSRef}&quot;nameLength&quot;I&quot;name&quot;^S&quot;whichInfo&quot;I&quot;catInfo&quot;^{FSCatalogInfo}&quot;forkNameLength&quot;I&quot;forkName&quot;^S&quot;permissions&quot;c&quot;reserved1&quot;C&quot;forkRefNum&quot;s&quot;newRef&quot;^{FSRef}}'/>
<struct name='FSRefParam' type64='{FSRefParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;ioNamePtr&quot;*&quot;ioVRefNum&quot;s&quot;reserved1&quot;s&quot;reserved2&quot;C&quot;reserved3&quot;C&quot;ref&quot;^{FSRef}&quot;whichInfo&quot;I&quot;catInfo&quot;^{FSCatalogInfo}&quot;nameLength&quot;Q&quot;name&quot;^S&quot;ioDirID&quot;I&quot;spec&quot;^{FSSpec}&quot;parentRef&quot;^{FSRef}&quot;newRef&quot;^{FSRef}&quot;textEncodingHint&quot;I&quot;outName&quot;^{HFSUniStr255}}' type='{FSRefParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;ioNamePtr&quot;*&quot;ioVRefNum&quot;s&quot;reserved1&quot;s&quot;reserved2&quot;C&quot;reserved3&quot;C&quot;ref&quot;^{FSRef}&quot;whichInfo&quot;I&quot;catInfo&quot;^{FSCatalogInfo}&quot;nameLength&quot;I&quot;name&quot;^S&quot;ioDirID&quot;I&quot;spec&quot;^{FSSpec}&quot;parentRef&quot;^{FSRef}&quot;newRef&quot;^{FSRef}&quot;textEncodingHint&quot;I&quot;outName&quot;^{HFSUniStr255}}'/>
<struct name='FSSearchParams' type64='{FSSearchParams=&quot;searchTime&quot;i&quot;searchBits&quot;I&quot;searchNameLength&quot;Q&quot;searchName&quot;^S&quot;searchInfo1&quot;^{FSCatalogInfo}&quot;searchInfo2&quot;^{FSCatalogInfo}}' type='{FSSearchParams=&quot;searchTime&quot;i&quot;searchBits&quot;I&quot;searchNameLength&quot;I&quot;searchName&quot;^S&quot;searchInfo1&quot;^{FSCatalogInfo}&quot;searchInfo2&quot;^{FSCatalogInfo}}'/>
<struct name='FSSpec' type64='{FSSpec=&quot;hidden&quot;[70C]}' type='{FSSpec=&quot;vRefNum&quot;s&quot;parID&quot;i&quot;name&quot;[64C]}'/>
<struct name='FSVolumeInfo' type64='{FSVolumeInfo=&quot;createDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;modifyDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;backupDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;checkedDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;fileCount&quot;I&quot;folderCount&quot;I&quot;totalBytes&quot;Q&quot;freeBytes&quot;Q&quot;blockSize&quot;I&quot;totalBlocks&quot;I&quot;freeBlocks&quot;I&quot;nextAllocation&quot;I&quot;rsrcClumpSize&quot;I&quot;dataClumpSize&quot;I&quot;nextCatalogID&quot;I&quot;finderInfo&quot;[32C]&quot;flags&quot;S&quot;filesystemID&quot;S&quot;signature&quot;S&quot;driveNumber&quot;S&quot;driverRefNum&quot;i}' type='{FSVolumeInfo=&quot;createDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;modifyDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;backupDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;checkedDate&quot;{UTCDateTime=&quot;highSeconds&quot;S&quot;lowSeconds&quot;I&quot;fraction&quot;S}&quot;fileCount&quot;I&quot;folderCount&quot;I&quot;totalBytes&quot;Q&quot;freeBytes&quot;Q&quot;blockSize&quot;I&quot;totalBlocks&quot;I&quot;freeBlocks&quot;I&quot;nextAllocation&quot;I&quot;rsrcClumpSize&quot;I&quot;dataClumpSize&quot;I&quot;nextCatalogID&quot;I&quot;finderInfo&quot;[32C]&quot;flags&quot;S&quot;filesystemID&quot;S&quot;signature&quot;S&quot;driveNumber&quot;S&quot;driverRefNum&quot;s}'/>
<struct name='FSVolumeInfoParam' type='{FSVolumeInfoParam=&quot;qLink&quot;^{QElem}&quot;qType&quot;s&quot;ioTrap&quot;s&quot;ioCmdAddr&quot;*&quot;ioCompletion&quot;^?&quot;ioResult&quot;s&quot;ioNamePtr&quot;*&quot;ioVRefNum&quot;s&quot;volumeIndex&quot;I&quot;whichInfo&quot;I&quot;volumeInfo&quot;^{FSVolumeInfo}&quot;volumeName&quot;^{HFSUniStr255}&quot;ref&quot;^{FSRef}}'/>
<struct name='GetVolParmsInfoBuffer' type64='{GetVolParmsInfoBuffer=&quot;vMVersion&quot;s&quot;vMAttrib&quot;i&quot;vMLocalHand&quot;^*&quot;vMServerAdr&quot;i&quot;vMVolumeGrade&quot;i&quot;vMForeignPrivID&quot;s&quot;vMExtendedAttributes&quot;i&quot;vMDeviceID&quot;^v&quot;vMMaxNameLength&quot;Q}' type='{GetVolParmsInfoBuffer=&quot;vMVersion&quot;s&quot;vMAttrib&quot;i&quot;vMLocalHand&quot;^*&quot;vMServerAdr&quot;i&quot;vMVolumeGrade&quot;i&quot;vMForeignPrivID&quot;s&quot;vMExtendedAttributes&quot;i&quot;vMDeviceID&quot;^v&quot;vMMaxNameLength&quot;I}'/>
<struct name='HFSUniStr255' type='{HFSUniStr255=&quot;length&quot;S&quot;unicode&quot;[255S]}'/>
<struct name='VolMountInfoHeader' type='{VolMountInfoHeader=&quot;length&quot;s&quot;media&quot;I}'/>
<struct name='VolumeMountInfoHeader' type='{VolumeMountInfoHeader=&quot;length&quot;s&quot;media&quot;I&quot;flags&quot;s}'/>
<opaque name='FNSubscriptionRef' type='^{OpaqueFNSubscriptionRef=}'/>
<opaque name='FSFileOperationRef' type='^{__FSFileOperation=}'/>
<opaque name='FSFileSecurityRef' type='^{__FSFileSecurity=}'/>
<opaque name='FSIterator' type='^{OpaqueFSIterator=}'/>
<opaque name='FSVolumeOperation' type='^{OpaqueFSVolumeOperation=}'/>
<constant name='kFSOperationBytesCompleteKey' type='^{__CFString=}'/>
<constant name='kFSOperationBytesRemainingKey' type='^{__CFString=}'/>
<constant name='kFSOperationObjectsCompleteKey' type='^{__CFString=}'/>
<constant name='kFSOperationObjectsRemainingKey' type='^{__CFString=}'/>
<constant name='kFSOperationThroughputKey' type='^{__CFString=}'/>
<constant name='kFSOperationTotalBytesKey' type='^{__CFString=}'/>
<constant name='kFSOperationTotalObjectsKey' type='^{__CFString=}'/>
<constant name='kFSOperationTotalUserVisibleObjectsKey' type='^{__CFString=}'/>
<constant name='kFSOperationUserVisibleObjectsCompleteKey' type='^{__CFString=}'/>
<constant name='kFSOperationUserVisibleObjectsRemainingKey' type='^{__CFString=}'/>
<enum name='AppleShareMediaType' value='1634103405'/>
<enum name='bAccessCntl' value='18'/>
<enum name='bAllowCDiDataHandler' value='17'/>
<enum name='bAncestorModDateChanges' value='11'/>
<enum name='bDoNotDisplay' value='24'/>
<enum name='bHasBTreeMgr' value='5'/>
<enum name='bHasBlankAccessPrivileges' value='4'/>
<enum name='bHasCatSearch' value='7'/>
<enum name='bHasCopyFile' value='14'/>
<enum name='bHasDesktopMgr' value='12'/>
<enum name='bHasDirectIO' value='1'/>
<enum name='bHasExtFSVol' value='16'/>
<enum name='bHasFileIDs' value='6'/>
<enum name='bHasFolderLock' value='10'/>
<enum name='bHasMoveRename' value='13'/>
<enum name='bHasOpenDeny' value='15'/>
<enum name='bHasPersonalAccessPrivileges' value='9'/>
<enum name='bHasShortName' value='11'/>
<enum name='bHasUserGroupList' value='8'/>
<enum name='bIsAutoMounted' value='14'/>
<enum name='bIsCasePreserving' value='23'/>
<enum name='bIsCaseSensitive' value='22'/>
<enum name='bIsEjectable' value='0'/>
<enum name='bIsOnExternalBus' value='27'/>
<enum name='bIsOnInternalBus' value='21'/>
<enum name='bIsRemovable' value='25'/>
<enum name='bL2PCanMapFileBlocks' value='9'/>
<enum name='bLimitFCBs' value='31'/>
<enum name='bLocalWList' value='30'/>
<enum name='bNoBootBlks' value='19'/>
<enum name='bNoDeskItems' value='20'/>
<enum name='bNoLclSync' value='27'/>
<enum name='bNoMiniFndr' value='29'/>
<enum name='bNoRootTimes' value='26'/>
<enum name='bNoSwitchTo' value='25'/>
<enum name='bNoSysDir' value='17'/>
<enum name='bNoVNEdit' value='28'/>
<enum name='bNoVolumeSizes' value='20'/>
<enum name='bParentModDateChanges' value='10'/>
<enum name='bSupports2TBFiles' value='4'/>
<enum name='bSupportsAsyncRequests' value='3'/>
<enum name='bSupportsExclusiveLocks' value='18'/>
<enum name='bSupportsExtendedFileSecurity' value='28'/>
<enum name='bSupportsFSCatalogSearch' value='2'/>
<enum name='bSupportsFSExchangeObjects' value='3'/>
<enum name='bSupportsHFSPlusAPIs' value='1'/>
<enum name='bSupportsJournaling' value='19'/>
<enum name='bSupportsLongNames' value='5'/>
<enum name='bSupportsMultiScriptNames' value='6'/>
<enum name='bSupportsNamedForks' value='7'/>
<enum name='bSupportsSubtreeIterators' value='8'/>
<enum name='bSupportsSymbolicLinks' value='13'/>
<enum name='bSupportsTrashVolumeCache' value='2'/>
<enum name='bTrshOffLine' value='26'/>
<enum name='forceReadBit' value='6'/>
<enum name='forceReadMask' value='64'/>
<enum name='fsAtMark' value='0'/>
<enum name='fsCurPerm' value='0'/>
<enum name='fsFromLEOF' value='2'/>
<enum name='fsFromMark' value='3'/>
<enum name='fsFromStart' value='1'/>
<enum name='fsRdAccessPerm' value='1'/>
<enum name='fsRdDenyPerm' value='16'/>
<enum name='fsRdPerm' value='1'/>
<enum name='fsRdWrPerm' value='3'/>
<enum name='fsRdWrShPerm' value='4'/>
<enum name='fsRtDirID' value='2'/>
<enum name='fsRtParID' value='1'/>
<enum name='fsSBAccessDate' value='131072'/>
<enum name='fsSBAccessDateBit' value='17'/>
<enum name='fsSBAttributeModDate' value='65536'/>
<enum name='fsSBAttributeModDateBit' value='16'/>
<enum name='fsSBDrBkDat' value='2048'/>
<enum name='fsSBDrBkDatBit' value='11'/>
<enum name='fsSBDrCrDat' value='512'/>
<enum name='fsSBDrCrDatBit' value='9'/>
<enum name='fsSBDrFndrInfo' value='4096'/>
<enum name='fsSBDrFndrInfoBit' value='12'/>
<enum name='fsSBDrMdDat' value='1024'/>
<enum name='fsSBDrMdDatBit' value='10'/>
<enum name='fsSBDrNmFls' value='16'/>
<enum name='fsSBDrNmFlsBit' value='4'/>
<enum name='fsSBDrParID' value='8192'/>
<enum name='fsSBDrParIDBit' value='13'/>
<enum name='fsSBDrUsrWds' value='8'/>
<enum name='fsSBDrUsrWdsBit' value='3'/>
<enum name='fsSBFlAttrib' value='4'/>
<enum name='fsSBFlAttribBit' value='2'/>
<enum name='fsSBFlBkDat' value='2048'/>
<enum name='fsSBFlBkDatBit' value='11'/>
<enum name='fsSBFlCrDat' value='512'/>
<enum name='fsSBFlCrDatBit' value='9'/>
<enum name='fsSBFlFndrInfo' value='8'/>
<enum name='fsSBFlFndrInfoBit' value='3'/>
<enum name='fsSBFlLgLen' value='32'/>
<enum name='fsSBFlLgLenBit' value='5'/>
<enum name='fsSBFlMdDat' value='1024'/>
<enum name='fsSBFlMdDatBit' value='10'/>
<enum name='fsSBFlParID' value='8192'/>
<enum name='fsSBFlParIDBit' value='13'/>
<enum name='fsSBFlPyLen' value='64'/>
<enum name='fsSBFlPyLenBit' value='6'/>
<enum name='fsSBFlRLgLen' value='128'/>
<enum name='fsSBFlRLgLenBit' value='7'/>
<enum name='fsSBFlRPyLen' value='256'/>
<enum name='fsSBFlRPyLenBit' value='8'/>
<enum name='fsSBFlXFndrInfo' value='4096'/>
<enum name='fsSBFlXFndrInfoBit' value='12'/>
<enum name='fsSBFullName' value='2'/>
<enum name='fsSBFullNameBit' value='1'/>
<enum name='fsSBGroupID' value='4194304'/>
<enum name='fsSBGroupIDBit' value='22'/>
<enum name='fsSBNegate' value='16384'/>
<enum name='fsSBNegateBit' value='14'/>
<enum name='fsSBNodeID' value='32768'/>
<enum name='fsSBNodeIDBit' value='15'/>
<enum name='fsSBPartialName' value='1'/>
<enum name='fsSBPartialNameBit' value='0'/>
<enum name='fsSBPermissions' value='262144'/>
<enum name='fsSBPermissionsBit' value='18'/>
<enum name='fsSBSkipHiddenItems' value='1048576'/>
<enum name='fsSBSkipHiddenItemsBit' value='20'/>
<enum name='fsSBSkipPackageContents' value='524288'/>
<enum name='fsSBSkipPackageContentsBit' value='19'/>
<enum name='fsSBUserID' value='2097152'/>
<enum name='fsSBUserIDBit' value='21'/>
<enum name='fsUnixPriv' value='1'/>
<enum name='fsWrAccessPerm' value='2'/>
<enum name='fsWrDenyPerm' value='32'/>
<enum name='fsWrPerm' value='2'/>
<enum name='ioDirFlg' value='4'/>
<enum name='ioDirMask' value='16'/>
<enum name='kAFPExtendedFlagsAlternateAddressMask' value='1'/>
<enum name='kAFPTagLengthDDP' value='6'/>
<enum name='kAFPTagLengthIP' value='6'/>
<enum name='kAFPTagLengthIPPort' value='8'/>
<enum name='kAFPTagTypeDDP' value='3'/>
<enum name='kAFPTagTypeDNS' value='4'/>
<enum name='kAFPTagTypeIP' value='1'/>
<enum name='kAFPTagTypeIPPort' value='2'/>
<enum name='kAsyncEjectComplete' value='6'/>
<enum name='kAsyncEjectInProgress' value='5'/>
<enum name='kAsyncMountComplete' value='2'/>
<enum name='kAsyncMountInProgress' value='1'/>
<enum name='kAsyncUnmountComplete' value='4'/>
<enum name='kAsyncUnmountInProgress' value='3'/>
<enum name='kEncryptPassword' value='3'/>
<enum name='kFNDirectoryModifiedMessage' value='1'/>
<enum name='kFNNoImplicitAllSubscription' value='1'/>
<enum name='kFNNotifyInBackground' value='2'/>
<enum name='kFSAllocAllOrNothingMask' value='1'/>
<enum name='kFSAllocContiguousMask' value='2'/>
<enum name='kFSAllocDefaultFlags' value='0'/>
<enum name='kFSAllocNoRoundUpMask' value='4'/>
<enum name='kFSAllocReservedMask' value='65528'/>
<enum name='kFSAllowConcurrentAsyncIOBit' value='3'/>
<enum name='kFSAllowConcurrentAsyncIOMask' value='8'/>
<enum name='kFSCatInfoAccessDate' value='256'/>
<enum name='kFSCatInfoAllDates' value='992'/>
<enum name='kFSCatInfoAttrMod' value='128'/>
<enum name='kFSCatInfoBackupDate' value='512'/>
<enum name='kFSCatInfoContentMod' value='64'/>
<enum name='kFSCatInfoCreateDate' value='32'/>
<enum name='kFSCatInfoDataSizes' value='16384'/>
<enum name='kFSCatInfoFSFileSecurityRef' value='4194304'/>
<enum name='kFSCatInfoFinderInfo' value='2048'/>
<enum name='kFSCatInfoFinderXInfo' value='4096'/>
<enum name='kFSCatInfoGettableInfo' value='262143'/>
<enum name='kFSCatInfoNodeFlags' value='2'/>
<enum name='kFSCatInfoNodeID' value='16'/>
<enum name='kFSCatInfoNone' value='0'/>
<enum name='kFSCatInfoParentDirID' value='8'/>
<enum name='kFSCatInfoPermissions' value='1024'/>
<enum name='kFSCatInfoReserved' value='-262144'/>
<enum name='kFSCatInfoRsrcSizes' value='32768'/>
<enum name='kFSCatInfoSetOwnership' value='1048576'/>
<enum name='kFSCatInfoSettableInfo' value='8163'/>
<enum name='kFSCatInfoSharingFlags' value='65536'/>
<enum name='kFSCatInfoTextEncoding' value='1'/>
<enum name='kFSCatInfoUserAccess' value='524288'/>
<enum name='kFSCatInfoUserPrivs' value='131072'/>
<enum name='kFSCatInfoValence' value='8192'/>
<enum name='kFSCatInfoVolume' value='4'/>
<enum name='kFSEjectVolumeForceEject' value='1'/>
<enum name='kFSFileOperationDefaultOptions' value='0'/>
<enum name='kFSFileOperationDoNotMoveAcrossVolumes' value='4'/>
<enum name='kFSFileOperationOverwrite' value='1'/>
<enum name='kFSFileOperationSkipPreflight' value='8'/>
<enum name='kFSFileOperationSkipSourcePermissionErrors' value='2'/>
<enum name='kFSForceReadBit' value='6'/>
<enum name='kFSForceReadMask' value='64'/>
<enum name='kFSInvalidVolumeRefNum' value='0'/>
<enum name='kFSIterateDelete' value='2'/>
<enum name='kFSIterateFlat' value='0'/>
<enum name='kFSIterateReserved' value='-4'/>
<enum name='kFSIterateSubtree' value='1'/>
<enum name='kFSMountServerMarkDoNotDisplay' value='1'/>
<enum name='kFSMountServerMountOnMountDir' value='4'/>
<enum name='kFSMountServerMountWithoutNotification' value='2'/>
<enum name='kFSMountServerSuppressConnectionUI' value='64'/>
<enum name='kFSNewLineBit' value='7'/>
<enum name='kFSNewLineCharMask' value='65280'/>
<enum name='kFSNewLineMask' value='128'/>
<enum name='kFSNoCacheBit' value='5'/>
<enum name='kFSNoCacheMask' value='32'/>
<enum name='kFSNodeCopyProtectBit' value='6'/>
<enum name='kFSNodeCopyProtectMask' value='64'/>
<enum name='kFSNodeDataOpenBit' value='3'/>
<enum name='kFSNodeDataOpenMask' value='8'/>
<enum name='kFSNodeForkOpenBit' value='7'/>
<enum name='kFSNodeForkOpenMask' value='128'/>
<enum name='kFSNodeHardLinkBit' value='8'/>
<enum name='kFSNodeHardLinkMask' value='256'/>
<enum name='kFSNodeInSharedBit' value='2'/>
<enum name='kFSNodeInSharedMask' value='4'/>
<enum name='kFSNodeIsDirectoryBit' value='4'/>
<enum name='kFSNodeIsDirectoryMask' value='16'/>
<enum name='kFSNodeIsMountedBit' value='3'/>
<enum name='kFSNodeIsMountedMask' value='8'/>
<enum name='kFSNodeIsSharePointBit' value='5'/>
<enum name='kFSNodeIsSharePointMask' value='32'/>
<enum name='kFSNodeLockedBit' value='0'/>
<enum name='kFSNodeLockedMask' value='1'/>
<enum name='kFSNodeResOpenBit' value='2'/>
<enum name='kFSNodeResOpenMask' value='4'/>
<enum name='kFSOperationStageComplete' value='3'/>
<enum name='kFSOperationStagePreflighting' value='1'/>
<enum name='kFSOperationStageRunning' value='2'/>
<enum name='kFSOperationStageUndefined' value='0'/>
<enum name='kFSPathMakeRefDefaultOptions' value='0'/>
<enum name='kFSPathMakeRefDoNotFollowLeafSymlink' value='1'/>
<enum name='kFSPleaseCacheBit' value='4'/>
<enum name='kFSPleaseCacheMask' value='16'/>
<enum name='kFSRdVerifyBit' value='6'/>
<enum name='kFSRdVerifyMask' value='64'/>
<enum name='kFSReplaceObjectDefaultOptions' value='0'/>
<enum name='kFSReplaceObjectDoNotCheckObjectWriteAccess' value='16'/>
<enum name='kFSReplaceObjectPreservePermissionInfo' value='8'/>
<enum name='kFSReplaceObjectReplaceMetadata' value='1'/>
<enum name='kFSReplaceObjectReplacePermissionInfo' value='4'/>
<enum name='kFSReplaceObjectSaveOriginalAsABackup' value='2'/>
<enum name='kFSUnmountVolumeForceUnmount' value='1'/>
<enum name='kFSVolFlagDefaultVolumeBit' value='5'/>
<enum name='kFSVolFlagDefaultVolumeMask' value='32'/>
<enum name='kFSVolFlagFilesOpenBit' value='6'/>
<enum name='kFSVolFlagFilesOpenMask' value='64'/>
<enum name='kFSVolFlagHardwareLockedBit' value='7'/>
<enum name='kFSVolFlagHardwareLockedMask' value='128'/>
<enum name='kFSVolFlagJournalingActiveBit' value='14'/>
<enum name='kFSVolFlagJournalingActiveMask' value='16384'/>
<enum name='kFSVolFlagSoftwareLockedBit' value='15'/>
<enum name='kFSVolFlagSoftwareLockedMask' value='32768'/>
<enum name='kFSVolInfoBackupDate' value='4'/>
<enum name='kFSVolInfoBlocks' value='128'/>
<enum name='kFSVolInfoCheckedDate' value='8'/>
<enum name='kFSVolInfoCreateDate' value='1'/>
<enum name='kFSVolInfoDataClump' value='1024'/>
<enum name='kFSVolInfoDirCount' value='32'/>
<enum name='kFSVolInfoDriveInfo' value='32768'/>
<enum name='kFSVolInfoFSInfo' value='16384'/>
<enum name='kFSVolInfoFileCount' value='16'/>
<enum name='kFSVolInfoFinderInfo' value='4096'/>
<enum name='kFSVolInfoFlags' value='8192'/>
<enum name='kFSVolInfoGettableInfo' value='65535'/>
<enum name='kFSVolInfoModDate' value='2'/>
<enum name='kFSVolInfoNextAlloc' value='256'/>
<enum name='kFSVolInfoNextID' value='2048'/>
<enum name='kFSVolInfoNone' value='0'/>
<enum name='kFSVolInfoRsrcClump' value='512'/>
<enum name='kFSVolInfoSettableInfo' value='12292'/>
<enum name='kFSVolInfoSizes' value='64'/>
<enum name='kForkInfoFlagsFileLockedBit' value='5'/>
<enum name='kForkInfoFlagsFileLockedMask' value='32'/>
<enum name='kForkInfoFlagsLargeFileBit' value='3'/>
<enum name='kForkInfoFlagsLargeFileMask' value='8'/>
<enum name='kForkInfoFlagsModifiedBit' value='7'/>
<enum name='kForkInfoFlagsModifiedMask' value='128'/>
<enum name='kForkInfoFlagsOwnClumpBit' value='6'/>
<enum name='kForkInfoFlagsOwnClumpMask' value='64'/>
<enum name='kForkInfoFlagsResourceBit' value='1'/>
<enum name='kForkInfoFlagsResourceMask' value='2'/>
<enum name='kForkInfoFlagsSharedWriteBit' value='4'/>
<enum name='kForkInfoFlagsSharedWriteMask' value='16'/>
<enum name='kForkInfoFlagsWriteBit' value='0'/>
<enum name='kForkInfoFlagsWriteLockedBit' value='2'/>
<enum name='kForkInfoFlagsWriteLockedMask' value='4'/>
<enum name='kForkInfoFlagsWriteMask' value='1'/>
<enum name='kGroupID2Name' value='2'/>
<enum name='kGroupName2ID' value='4'/>
<enum name='kLarge4BitIconSize' value='512'/>
<enum name='kLarge8BitIconSize' value='1024'/>
<enum name='kLargeIconSize' value='256'/>
<enum name='kMaximumBlocksIn4GB' value='8388607'/>
<enum name='kNoUserAuthentication' value='1'/>
<enum name='kOwnerID2Name' value='1'/>
<enum name='kOwnerName2ID' value='3'/>
<enum name='kPassword' value='2'/>
<enum name='kReturnNextGroup' value='2'/>
<enum name='kReturnNextUG' value='3'/>
<enum name='kReturnNextUser' value='1'/>
<enum name='kSmall4BitIconSize' value='128'/>
<enum name='kSmall8BitIconSize' value='256'/>
<enum name='kSmallIconSize' value='64'/>
<enum name='kTwoWayEncryptPassword' value='6'/>
<enum name='kUseWidePositioning' value='256'/>
<enum name='kVCBFlagsHFSPlusAPIsBit' value='4'/>
<enum name='kVCBFlagsHFSPlusAPIsMask' value='16'/>
<enum name='kVCBFlagsHardwareGoneBit' value='5'/>
<enum name='kVCBFlagsHardwareGoneMask' value='32'/>
<enum name='kVCBFlagsIdleFlushBit' value='3'/>
<enum name='kVCBFlagsIdleFlushMask' value='8'/>
<enum name='kVCBFlagsVolumeDirtyBit' value='15'/>
<enum name='kVCBFlagsVolumeDirtyMask' value='32768'/>
<enum name='kWidePosOffsetBit' value='8'/>
<enum name='kadministratorUser' value='1'/>
<enum name='kfullPrivileges' value='458759'/>
<enum name='kioACAccessBlankAccessBit' value='28'/>
<enum name='kioACAccessBlankAccessMask' value='268435456'/>
<enum name='kioACAccessEveryoneReadBit' value='17'/>
<enum name='kioACAccessEveryoneReadMask' value='131072'/>
<enum name='kioACAccessEveryoneSearchBit' value='16'/>
<enum name='kioACAccessEveryoneSearchMask' value='65536'/>
<enum name='kioACAccessEveryoneWriteBit' value='18'/>
<enum name='kioACAccessEveryoneWriteMask' value='262144'/>
<enum name='kioACAccessGroupReadBit' value='9'/>
<enum name='kioACAccessGroupReadMask' value='512'/>
<enum name='kioACAccessGroupSearchBit' value='8'/>
<enum name='kioACAccessGroupSearchMask' value='256'/>
<enum name='kioACAccessGroupWriteBit' value='10'/>
<enum name='kioACAccessGroupWriteMask' value='1024'/>
<enum name='kioACAccessOwnerBit' value='31'/>
<enum name='kioACAccessOwnerMask' value='-2147483648'/>
<enum name='kioACAccessOwnerReadBit' value='1'/>
<enum name='kioACAccessOwnerReadMask' value='2'/>
<enum name='kioACAccessOwnerSearchBit' value='0'/>
<enum name='kioACAccessOwnerSearchMask' value='1'/>
<enum name='kioACAccessOwnerWriteBit' value='2'/>
<enum name='kioACAccessOwnerWriteMask' value='4'/>
<enum name='kioACAccessUserReadBit' value='25'/>
<enum name='kioACAccessUserReadMask' value='33554432'/>
<enum name='kioACAccessUserSearchBit' value='24'/>
<enum name='kioACAccessUserSearchMask' value='16777216'/>
<enum name='kioACAccessUserWriteBit' value='26'/>
<enum name='kioACAccessUserWriteMask' value='67108864'/>
<enum name='kioACUserNoMakeChangesBit' value='2'/>
<enum name='kioACUserNoMakeChangesMask' value='4'/>
<enum name='kioACUserNoSeeFilesBit' value='1'/>
<enum name='kioACUserNoSeeFilesMask' value='2'/>
<enum name='kioACUserNoSeeFolderBit' value='0'/>
<enum name='kioACUserNoSeeFolderMask' value='1'/>
<enum name='kioACUserNotOwnerBit' value='7'/>
<enum name='kioACUserNotOwnerMask' value='128'/>
<enum name='kioFCBFileLockedBit' value='13'/>
<enum name='kioFCBFileLockedMask' value='8192'/>
<enum name='kioFCBLargeFileBit' value='11'/>
<enum name='kioFCBLargeFileMask' value='2048'/>
<enum name='kioFCBModifiedBit' value='15'/>
<enum name='kioFCBModifiedMask' value='32768'/>
<enum name='kioFCBOwnClumpBit' value='14'/>
<enum name='kioFCBOwnClumpMask' value='16384'/>
<enum name='kioFCBResourceBit' value='9'/>
<enum name='kioFCBResourceMask' value='512'/>
<enum name='kioFCBSharedWriteBit' value='12'/>
<enum name='kioFCBSharedWriteMask' value='4096'/>
<enum name='kioFCBWriteBit' value='8'/>
<enum name='kioFCBWriteLockedBit' value='10'/>
<enum name='kioFCBWriteLockedMask' value='1024'/>
<enum name='kioFCBWriteMask' value='256'/>
<enum name='kioFlAttribCopyProtBit' value='6'/>
<enum name='kioFlAttribCopyProtMask' value='64'/>
<enum name='kioFlAttribDataOpenBit' value='3'/>
<enum name='kioFlAttribDataOpenMask' value='8'/>
<enum name='kioFlAttribDirBit' value='4'/>
<enum name='kioFlAttribDirMask' value='16'/>
<enum name='kioFlAttribFileOpenBit' value='7'/>
<enum name='kioFlAttribFileOpenMask' value='128'/>
<enum name='kioFlAttribInSharedBit' value='2'/>
<enum name='kioFlAttribInSharedMask' value='4'/>
<enum name='kioFlAttribLockedBit' value='0'/>
<enum name='kioFlAttribLockedMask' value='1'/>
<enum name='kioFlAttribMountedBit' value='3'/>
<enum name='kioFlAttribMountedMask' value='8'/>
<enum name='kioFlAttribResOpenBit' value='2'/>
<enum name='kioFlAttribResOpenMask' value='4'/>
<enum name='kioFlAttribSharePointBit' value='5'/>
<enum name='kioFlAttribSharePointMask' value='32'/>
<enum name='kioVAtrbDefaultVolumeBit' value='5'/>
<enum name='kioVAtrbDefaultVolumeMask' value='32'/>
<enum name='kioVAtrbFilesOpenBit' value='6'/>
<enum name='kioVAtrbFilesOpenMask' value='64'/>
<enum name='kioVAtrbHardwareLockedBit' value='7'/>
<enum name='kioVAtrbHardwareLockedMask' value='128'/>
<enum name='kioVAtrbSoftwareLockedBit' value='15'/>
<enum name='kioVAtrbSoftwareLockedMask' value='32768'/>
<enum name='knoGroup' value='0'/>
<enum name='knoUser' value='0'/>
<enum name='kownerPrivileges' value='7'/>
<enum name='newLineBit' value='7'/>
<enum name='newLineCharMask' value='65280'/>
<enum name='newLineMask' value='128'/>
<enum name='noCacheBit' value='5'/>
<enum name='noCacheMask' value='32'/>
<enum name='pleaseCacheBit' value='4'/>
<enum name='pleaseCacheMask' value='16'/>
<enum name='rdVerify' value='64'/>
<enum name='rdVerifyBit' value='6'/>
<enum name='rdVerifyMask' value='64'/>
<enum name='volMountChangedBit' value='14'/>
<enum name='volMountChangedMask' value='16384'/>
<enum name='volMountExtendedFlagsBit' value='7'/>
<enum name='volMountExtendedFlagsMask' value='128'/>
<enum name='volMountFSReservedMask' value='255'/>
<enum name='volMountInteractBit' value='15'/>
<enum name='volMountInteractMask' value='32768'/>
<enum name='volMountNoLoginMsgFlagBit' value='0'/>
<enum name='volMountNoLoginMsgFlagMask' value='1'/>
<enum name='volMountSysReservedMask' value='65280'/>
<function name='DisposeFNSubscriptionUPP'>
<arg function_pointer='true' type='^?'>
<arg type64='I' type='L'/>
<arg type64='I' type='L'/>
<arg type='^v'/>
<arg type='^{OpaqueFNSubscriptionRef=}'/>
<retval type='v'/>
</arg>
</function>
<function name='DisposeFSVolumeEjectUPP'>
<arg function_pointer='true' type='^?'>
<arg type='^{OpaqueFSVolumeOperation=}'/>
<arg type='^v'/>
<arg type64='i' type='l'/>
<arg type='s'/>
<arg type='i'/>
<retval type='v'/>
</arg>
</function>
<function name='DisposeFSVolumeMountUPP'>
<arg function_pointer='true' type='^?'>
<arg type='^{OpaqueFSVolumeOperation=}'/>
<arg type='^v'/>
<arg type64='i' type='l'/>
<arg type='s'/>
<retval type='v'/>
</arg>
</function>
<function name='DisposeFSVolumeUnmountUPP'>
<arg function_pointer='true' type='^?'>
<arg type='^{OpaqueFSVolumeOperation=}'/>
<arg type='^v'/>
<arg type64='i' type='l'/>
<arg type='s'/>
<arg type='i'/>
<retval type='v'/>
</arg>
</function>
<function name='DisposeIOCompletionUPP'>
<arg function_pointer='true' type='^?'>
<arg type64='^v' type='^(ParamBlockRec={IOParam=^{QElem}ss*^?s*sscc**iisi}{FileParam=^{QElem}ss*^?s*ssccscc{FInfo=IIS{Point=ss}s}ISiiSiiII}{VolumeParam=^{QElem}ss*^?s*sIsIISSSsSIISIS}{CntrlParam=^{QElem}ss*^?s*sss[11s]}{SlotDevParam=^{QElem}ss*^?s*sscc*scc}{MultiDevParam=^{QElem}ss*^?s*sscc*s*})'/>
<retval type='v'/>
</arg>
</function>
<function name='FNGetDirectoryForSubscription'>
<arg type='^{OpaqueFNSubscriptionRef=}'/>
<arg type='^{FSRef=[80C]}'/>
<retval type64='i' type='l'/>
</function>
<function name='FNNotify'>
<arg type='^{FSRef=[80C]}'/>
<arg type64='I' type='L'/>
<arg type64='I' type='L'/>
<retval type64='i' type='l'/>
</function>
<function name='FNNotifyAll'>
<arg type64='I' type='L'/>
<arg type64='I' type='L'/>
<retval type64='i' type='l'/>
</function>
<function name='FNNotifyByPath'>
<arg type='*'/>
<arg type64='I' type='L'/>
<arg type64='I' type='L'/>
<retval type64='i' type='l'/>
</function>
<function name='FNSubscribe'>
<arg type='^{FSRef=[80C]}'/>
<arg function_pointer='true' type='^?'>
<arg type64='I' type='L'/>
<arg type64='I' type='L'/>
<arg type='^v'/>
<arg type='^{OpaqueFNSubscriptionRef=}'/>
<retval type='v'/>
</arg>
<arg type='^v'/>
<arg type64='I' type='L'/>
<arg type='^^{OpaqueFNSubscriptionRef}'/>
<retval type64='i' type='l'/>
</function>
<function name='FNSubscribeByPath'>
<arg type='*'/>
<arg function_pointer='true' type='^?'>
<arg type64='I' type='L'/>
<arg type64='I' type='L'/>
<arg type='^v'/>
<arg type='^{OpaqueFNSubscriptionRef=}'/>
<retval type='v'/>
</arg>
<arg type='^v'/>
<arg type64='I' type='L'/>
<arg type='^^{OpaqueFNSubscriptionRef}'/>
<retval type64='i' type='l'/>
</function>
<function name='FNUnsubscribe'>
<arg type='^{OpaqueFNSubscriptionRef=}'/>
<retval type64='i' type='l'/>
</function>
<function name='FSAllocateFork'>
<arg type64='i' type='s'/>
<arg type='S'/>
<arg type='S'/>
<arg type='q'/>
<arg type='Q'/>
<arg type='^Q'/>
<retval type='s'/>
</function>
<function name='FSCancelVolumeOperation'>
<arg type='^{OpaqueFSVolumeOperation=}'/>
<retval type64='i' type='l'/>
</function>
<function name='FSCatalogSearch'>
<arg type='^{OpaqueFSIterator=}'/>
<arg type64='^{FSSearchParams=iIQ^S^{FSCatalogInfo}^{FSCatalogInfo}}' type='^{FSSearchParams=iII^S^{FSCatalogInfo}^{FSCatalogInfo}}'/>
<arg type64='Q' type='L'/>
<arg type64='^Q' type='^I'/>
<arg type='^B'/>
<arg type64='I' type='L'/>
<arg type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}' type='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}[4L][16C][16C]QQQQII}'/>
<arg type='^{FSRef=[80C]}'/>
<arg type64='^{FSSpec=[70C]}' type='^{FSSpec=si[64C]}'/>
<arg type='^{HFSUniStr255=S[255S]}'/>
<retval type='s'/>
</function>
<function name='FSCloseFork'>
<arg type64='i' type='s'/>
<retval type='s'/>
</function>
<function name='FSCloseIterator'>
<arg type='^{OpaqueFSIterator=}'/>
<retval type='s'/>
</function>
<function name='FSCompareFSRefs'>
<arg type='^{FSRef=[80C]}'/>
<arg type='^{FSRef=[80C]}'/>
<retval type='s'/>
</function>
<function name='FSCopyDADiskForVolume'>
<arg type='s'/>
<arg type='^^{__DADisk}'/>
<retval type64='i' type='l'/>
</function>
<function name='FSCopyDiskIDForVolume'>
<arg type='s'/>
<arg type='^^{__CFString}'/>
<retval type64='i' type='l'/>
</function>
<function name='FSCopyObjectAsync'>
<arg type='^{__FSFileOperation=}'/>
<arg type='^{FSRef=[80C]}'/>
<arg type='^{FSRef=[80C]}'/>
<arg type='^{__CFString=}'/>
<arg type64='I' type='L'/>
<arg function_pointer='true' type='^?'>
<arg type='^{__FSFileOperation=}'/>
<arg type='^{FSRef=[80C]}'/>
<arg type64='I' type='L'/>
<arg type64='i' type='l'/>
<arg type='^{__CFDictionary=}'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type='d'/>
<arg type64='^{FSFileOperationClientContext=q^v^?^?^?}' type='^{FSFileOperationClientContext=i^v^?^?^?}'/>
<retval type64='i' type='l'/>
</function>
<function name='FSCopyObjectSync'>
<arg type='^{FSRef=[80C]}'/>
<arg type='^{FSRef=[80C]}'/>
<arg type='^{__CFString=}'/>
<arg type='^{FSRef=[80C]}'/>
<arg type64='I' type='L'/>
<retval type64='i' type='l'/>
</function>
<function name='FSCopyURLForVolume'>
<arg type='s'/>
<arg type='^^{__CFURL}'/>
<retval type64='i' type='l'/>
</function>
<function name='FSCreateDirectoryUnicode'>
<arg type='^{FSRef=[80C]}'/>
<arg type64='Q' type='L'/>
<arg type='^S'/>
<arg type64='I' type='L'/>
<arg type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}' type='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}[4L][16C][16C]QQQQII}'/>
<arg type='^{FSRef=[80C]}'/>
<arg type64='^{FSSpec=[70C]}' type='^{FSSpec=si[64C]}'/>
<arg type='^I'/>
<retval type='s'/>
</function>
<function name='FSCreateFileAndOpenForkUnicode'>
<arg type='^{FSRef=[80C]}'/>
<arg type64='Q' type='L'/>
<arg type='^S'/>
<arg type64='I' type='L'/>
<arg type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}' type='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}[4L][16C][16C]QQQQII}'/>
<arg type64='Q' type='L'/>
<arg type='^S'/>
<arg type='c'/>
<arg type64='^i' type='^s'/>
<arg type='^{FSRef=[80C]}'/>
<retval type64='i' type='l'/>
</function>
<function name='FSCreateFileUnicode'>
<arg type='^{FSRef=[80C]}'/>
<arg type64='Q' type='L'/>
<arg type='^S'/>
<arg type64='I' type='L'/>
<arg type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}' type='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}[4L][16C][16C]QQQQII}'/>
<arg type='^{FSRef=[80C]}'/>
<arg type64='^{FSSpec=[70C]}' type='^{FSSpec=si[64C]}'/>
<retval type='s'/>
</function>
<function name='FSCreateFork'>
<arg type='^{FSRef=[80C]}'/>
<arg type64='Q' type='L'/>
<arg type='^S'/>
<retval type='s'/>
</function>
<function name='FSCreateStringFromHFSUniStr'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{HFSUniStr255=S[255S]}'/>
<retval already_retained='true' type='^{__CFString=}'/>
</function>
<function name='FSCreateVolumeOperation'>
<arg type='^^{OpaqueFSVolumeOperation}'/>
<retval type64='i' type='l'/>
</function>
<function name='FSDeleteFork'>
<arg type='^{FSRef=[80C]}'/>
<arg type64='Q' type='L'/>
<arg type='^S'/>
<retval type='s'/>
</function>
<function name='FSDeleteObject'>
<arg type='^{FSRef=[80C]}'/>
<retval type='s'/>
</function>
<function name='FSDisposeVolumeOperation'>
<arg type='^{OpaqueFSVolumeOperation=}'/>
<retval type64='i' type='l'/>
</function>
<function name='FSEjectVolumeAsync'>
<arg type='s'/>
<arg type64='I' type='L'/>
<arg type='^{OpaqueFSVolumeOperation=}'/>
<arg type='^v'/>
<arg function_pointer='true' type='^?'>
<arg type='^{OpaqueFSVolumeOperation=}'/>
<arg type='^v'/>
<arg type64='i' type='l'/>
<arg type='s'/>
<arg type='i'/>
<retval type='v'/>
</arg>
<arg type='^{__CFRunLoop=}'/>
<arg type='^{__CFString=}'/>
<retval type64='i' type='l'/>
</function>
<function name='FSEjectVolumeSync'>
<arg type='s'/>
<arg type64='I' type='L'/>
<arg type='^i'/>
<retval type64='i' type='l'/>
</function>
<function name='FSExchangeObjects'>
<arg type='^{FSRef=[80C]}'/>
<arg type='^{FSRef=[80C]}'/>
<retval type='s'/>
</function>
<function name='FSFileOperationCancel'>
<arg type='^{__FSFileOperation=}'/>
<retval type64='i' type='l'/>
</function>
<function name='FSFileOperationCopyStatus'>
<arg type='^{__FSFileOperation=}'/>
<arg type='^{FSRef=[80C]}'/>
<arg type='^I'/>
<arg type='^i'/>
<arg type='^^{__CFDictionary}'/>
<arg type='^^v'/>
<retval type64='i' type='l'/>
</function>
<function name='FSFileOperationCreate'>
<arg type='^{__CFAllocator=}'/>
<retval type='^{__FSFileOperation=}'/>
</function>
<function name='FSFileOperationGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='FSFileOperationScheduleWithRunLoop'>
<arg type='^{__FSFileOperation=}'/>
<arg type='^{__CFRunLoop=}'/>
<arg type='^{__CFString=}'/>
<retval type64='i' type='l'/>
</function>
<function name='FSFileOperationUnscheduleFromRunLoop'>
<arg type='^{__FSFileOperation=}'/>
<arg type='^{__CFRunLoop=}'/>
<arg type='^{__CFString=}'/>
<retval type64='i' type='l'/>
</function>
<function name='FSFileSecurityCopyAccessControlList'>
<arg type='^{__FSFileSecurity=}'/>
<arg type='^^{_acl}'/>
<retval type64='i' type='l'/>
</function>
<function name='FSFileSecurityCreate'>
<arg type='^{__CFAllocator=}'/>
<retval type='^{__FSFileSecurity=}'/>
</function>
<function name='FSFileSecurityCreateWithFSPermissionInfo'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{FSPermissionInfo=IICCS^{__FSFileSecurity}}'/>
<retval type='^{__FSFileSecurity=}'/>
</function>
<function name='FSFileSecurityGetGroup'>
<arg type='^{__FSFileSecurity=}'/>
<arg type='^I'/>
<retval type64='i' type='l'/>
</function>
<function name='FSFileSecurityGetGroupUUID'>
<arg type='^{__FSFileSecurity=}'/>
<arg type='^{_CFUUIDBytes=CCCCCCCCCCCCCCCC}'/>
<retval type64='i' type='l'/>
</function>
<function name='FSFileSecurityGetMode'>
<arg type='^{__FSFileSecurity=}'/>
<arg type='^S'/>
<retval type64='i' type='l'/>
</function>
<function name='FSFileSecurityGetOwner'>
<arg type='^{__FSFileSecurity=}'/>
<arg type='^I'/>
<retval type64='i' type='l'/>
</function>
<function name='FSFileSecurityGetOwnerUUID'>
<arg type='^{__FSFileSecurity=}'/>
<arg type='^{_CFUUIDBytes=CCCCCCCCCCCCCCCC}'/>
<retval type64='i' type='l'/>
</function>
<function name='FSFileSecurityGetTypeID'>
<retval type64='Q' type='L'/>
</function>
<function name='FSFileSecurityRefCreateCopy'>
<arg type='^{__CFAllocator=}'/>
<arg type='^{__FSFileSecurity=}'/>
<retval type='^{__FSFileSecurity=}'/>
</function>
<function name='FSFileSecuritySetAccessControlList'>
<arg type='^{__FSFileSecurity=}'/>
<arg type='^{_acl=}'/>
<retval type64='i' type='l'/>
</function>
<function name='FSFileSecuritySetGroup'>
<arg type='^{__FSFileSecurity=}'/>
<arg type64='I' type='L'/>
<retval type64='i' type='l'/>
</function>
<function name='FSFileSecuritySetGroupUUID'>
<arg type='^{__FSFileSecurity=}'/>
<arg type='^{_CFUUIDBytes=CCCCCCCCCCCCCCCC}'/>
<retval type64='i' type='l'/>
</function>
<function name='FSFileSecuritySetMode'>
<arg type='^{__FSFileSecurity=}'/>
<arg type='S'/>
<retval type64='i' type='l'/>
</function>
<function name='FSFileSecuritySetOwner'>
<arg type='^{__FSFileSecurity=}'/>
<arg type64='I' type='L'/>
<retval type64='i' type='l'/>
</function>
<function name='FSFileSecuritySetOwnerUUID'>
<arg type='^{__FSFileSecurity=}'/>
<arg type='^{_CFUUIDBytes=CCCCCCCCCCCCCCCC}'/>
<retval type64='i' type='l'/>
</function>
<function name='FSFlushFork'>
<arg type64='i' type='s'/>
<retval type='s'/>
</function>
<function name='FSFlushVolume'>
<arg type='s'/>
<retval type64='i' type='l'/>
</function>
<function name='FSGetAsyncEjectStatus'>
<arg type='^{OpaqueFSVolumeOperation=}'/>
<arg type='^I'/>
<arg type='^i'/>
<arg type='^s'/>
<arg type='^i'/>
<arg type='^^v'/>
<retval type64='i' type='l'/>
</function>
<function name='FSGetAsyncMountStatus'>
<arg type='^{OpaqueFSVolumeOperation=}'/>
<arg type='^I'/>
<arg type='^i'/>
<arg type='^s'/>
<arg type='^^v'/>
<retval type64='i' type='l'/>
</function>
<function name='FSGetAsyncUnmountStatus'>
<arg type='^{OpaqueFSVolumeOperation=}'/>
<arg type='^I'/>
<arg type='^i'/>
<arg type='^s'/>
<arg type='^i'/>
<arg type='^^v'/>
<retval type64='i' type='l'/>
</function>
<function name='FSGetCatalogInfo'>
<arg type='^{FSRef=[80C]}'/>
<arg type64='I' type='L'/>
<arg type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}' type='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}[4L][16C][16C]QQQQII}'/>
<arg type='^{HFSUniStr255=S[255S]}'/>
<arg type64='^{FSSpec=[70C]}' type='^{FSSpec=si[64C]}'/>
<arg type='^{FSRef=[80C]}'/>
<retval type='s'/>
</function>
<function name='FSGetCatalogInfoBulk'>
<arg type='^{OpaqueFSIterator=}'/>
<arg type64='Q' type='L'/>
<arg type64='^Q' type='^I'/>
<arg type='^B'/>
<arg type64='I' type='L'/>
<arg type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}' type='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}[4L][16C][16C]QQQQII}'/>
<arg type='^{FSRef=[80C]}'/>
<arg type64='^{FSSpec=[70C]}' type='^{FSSpec=si[64C]}'/>
<arg type='^{HFSUniStr255=S[255S]}'/>
<retval type='s'/>
</function>
<function name='FSGetDataForkName'>
<arg type='^{HFSUniStr255=S[255S]}'/>
<retval type='s'/>
</function>
<function name='FSGetForkCBInfo'>
<arg type64='i' type='s'/>
<arg type='s'/>
<arg type='^s'/>
<arg type64='^i' type='^s'/>
<arg type='^{FSForkInfo=CcsIIIQQQQ}'/>
<arg type='^{FSRef=[80C]}'/>
<arg type='^{HFSUniStr255=S[255S]}'/>
<retval type='s'/>
</function>
<function name='FSGetForkPosition'>
<arg type64='i' type='s'/>
<arg type='^q'/>
<retval type='s'/>
</function>
<function name='FSGetForkSize'>
<arg type64='i' type='s'/>
<arg type='^q'/>
<retval type='s'/>
</function>
<function name='FSGetHFSUniStrFromString'>
<arg type='^{__CFString=}'/>
<arg type='^{HFSUniStr255=S[255S]}'/>
<retval type64='i' type='l'/>
</function>
<function name='FSGetResourceForkName'>
<arg type='^{HFSUniStr255=S[255S]}'/>
<retval type='s'/>
</function>
<function name='FSGetTemporaryDirectoryForReplaceObject'>
<arg type='^{FSRef=[80C]}'/>
<arg type='^{FSRef=[80C]}'/>
<arg type64='I' type='L'/>
<retval type64='i' type='l'/>
</function>
<function name='FSGetVolumeForDADisk'>
<arg type='^{__DADisk=}'/>
<arg type='^s'/>
<retval type64='i' type='l'/>
</function>
<function name='FSGetVolumeForDiskID'>
<arg type='^{__CFString=}'/>
<arg type='^s'/>
<retval type64='i' type='l'/>
</function>
<function name='FSGetVolumeInfo'>
<arg type='s'/>
<arg type64='Q' type='L'/>
<arg type='^s'/>
<arg type64='I' type='L'/>
<arg type64='^{FSVolumeInfo={UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}IIQQIIIIIII[32C]SSSSi}' type='^{FSVolumeInfo={UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}IIQQIIIIIII[32C]SSSSs}'/>
<arg type='^{HFSUniStr255=S[255S]}'/>
<arg type='^{FSRef=[80C]}'/>
<retval type='s'/>
</function>
<function name='FSGetVolumeMountInfo'>
<arg type='s'/>
<arg type='*'/>
<arg type64='Q' type='L'/>
<arg type64='^Q' type='^I'/>
<retval type64='i' type='l'/>
</function>
<function name='FSGetVolumeMountInfoSize'>
<arg type='s'/>
<arg type64='^Q' type='^I'/>
<retval type64='i' type='l'/>
</function>
<function name='FSGetVolumeParms'>
<arg type='s'/>
<arg type64='^{GetVolParmsInfoBuffer=si^*iisi^vQ}' type='^{GetVolParmsInfoBuffer=si^*iisi^vI}'/>
<arg type64='Q' type='L'/>
<retval type64='i' type='l'/>
</function>
<function name='FSIsFSRefValid'>
<arg type='^{FSRef=[80C]}'/>
<retval type='B'/>
</function>
<function name='FSIterateForks'>
<arg type='^{FSRef=[80C]}'/>
<arg type='^{CatPositionRec=i[6s]}'/>
<arg type='^{HFSUniStr255=S[255S]}'/>
<arg type='^q'/>
<arg type='^Q'/>
<retval type='s'/>
</function>
<function name='FSLockRange'>
<arg type64='i' type='s'/>
<arg type='S'/>
<arg type='q'/>
<arg type='Q'/>
<arg type='^Q'/>
<retval type64='i' type='l'/>
</function>
<function name='FSMakeFSRefUnicode'>
<arg type='^{FSRef=[80C]}'/>
<arg type64='Q' type='L'/>
<arg type='^S'/>
<arg type64='I' type='L'/>
<arg type='^{FSRef=[80C]}'/>
<retval type='s'/>
</function>
<function name='FSMountLocalVolumeAsync'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFURL=}'/>
<arg type='^{OpaqueFSVolumeOperation=}'/>
<arg type='^v'/>
<arg type64='I' type='L'/>
<arg function_pointer='true' type='^?'>
<arg type='^{OpaqueFSVolumeOperation=}'/>
<arg type='^v'/>
<arg type64='i' type='l'/>
<arg type='s'/>
<retval type='v'/>
</arg>
<arg type='^{__CFRunLoop=}'/>
<arg type='^{__CFString=}'/>
<retval type64='i' type='l'/>
</function>
<function name='FSMountLocalVolumeSync'>
<arg type='^{__CFString=}'/>
<arg type='^{__CFURL=}'/>
<arg type='^s'/>
<arg type64='I' type='L'/>
<retval type64='i' type='l'/>
</function>
<function name='FSMountServerVolumeAsync'>
<arg type='^{__CFURL=}'/>
<arg type='^{__CFURL=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{OpaqueFSVolumeOperation=}'/>
<arg type='^v'/>
<arg type64='I' type='L'/>
<arg function_pointer='true' type='^?'>
<arg type='^{OpaqueFSVolumeOperation=}'/>
<arg type='^v'/>
<arg type64='i' type='l'/>
<arg type='s'/>
<retval type='v'/>
</arg>
<arg type='^{__CFRunLoop=}'/>
<arg type='^{__CFString=}'/>
<retval type64='i' type='l'/>
</function>
<function name='FSMountServerVolumeSync'>
<arg type='^{__CFURL=}'/>
<arg type='^{__CFURL=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type='^s'/>
<arg type64='I' type='L'/>
<retval type64='i' type='l'/>
</function>
<function name='FSMoveObject'>
<arg type='^{FSRef=[80C]}'/>
<arg type='^{FSRef=[80C]}'/>
<arg type='^{FSRef=[80C]}'/>
<retval type='s'/>
</function>
<function name='FSMoveObjectAsync'>
<arg type='^{__FSFileOperation=}'/>
<arg type='^{FSRef=[80C]}'/>
<arg type='^{FSRef=[80C]}'/>
<arg type='^{__CFString=}'/>
<arg type64='I' type='L'/>
<arg function_pointer='true' type='^?'>
<arg type='^{__FSFileOperation=}'/>
<arg type='^{FSRef=[80C]}'/>
<arg type64='I' type='L'/>
<arg type64='i' type='l'/>
<arg type='^{__CFDictionary=}'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type='d'/>
<arg type64='^{FSFileOperationClientContext=q^v^?^?^?}' type='^{FSFileOperationClientContext=i^v^?^?^?}'/>
<retval type64='i' type='l'/>
</function>
<function name='FSMoveObjectSync'>
<arg type='^{FSRef=[80C]}'/>
<arg type='^{FSRef=[80C]}'/>
<arg type='^{__CFString=}'/>
<arg type='^{FSRef=[80C]}'/>
<arg type64='I' type='L'/>
<retval type64='i' type='l'/>
</function>
<function name='FSMoveObjectToTrashAsync'>
<arg type='^{__FSFileOperation=}'/>
<arg type='^{FSRef=[80C]}'/>
<arg type64='I' type='L'/>
<arg function_pointer='true' type='^?'>
<arg type='^{__FSFileOperation=}'/>
<arg type='^{FSRef=[80C]}'/>
<arg type64='I' type='L'/>
<arg type64='i' type='l'/>
<arg type='^{__CFDictionary=}'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type='d'/>
<arg type64='^{FSFileOperationClientContext=q^v^?^?^?}' type='^{FSFileOperationClientContext=i^v^?^?^?}'/>
<retval type64='i' type='l'/>
</function>
<function name='FSMoveObjectToTrashSync'>
<arg type='^{FSRef=[80C]}'/>
<arg type='^{FSRef=[80C]}'/>
<arg type64='I' type='L'/>
<retval type64='i' type='l'/>
</function>
<function name='FSOpenFork'>
<arg type='^{FSRef=[80C]}'/>
<arg type64='Q' type='L'/>
<arg type='^S'/>
<arg type='c'/>
<arg type64='^i' type='^s'/>
<retval type='s'/>
</function>
<function name='FSOpenIterator'>
<arg type='^{FSRef=[80C]}'/>
<arg type64='I' type='L'/>
<arg type='^^{OpaqueFSIterator}'/>
<retval type='s'/>
</function>
<function name='FSPathCopyObjectAsync'>
<arg type='^{__FSFileOperation=}'/>
<arg type='*'/>
<arg type='*'/>
<arg type='^{__CFString=}'/>
<arg type64='I' type='L'/>
<arg function_pointer='true' type='^?'>
<arg type='^{__FSFileOperation=}'/>
<arg type='*'/>
<arg type64='I' type='L'/>
<arg type64='i' type='l'/>
<arg type='^{__CFDictionary=}'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type='d'/>
<arg type64='^{FSFileOperationClientContext=q^v^?^?^?}' type='^{FSFileOperationClientContext=i^v^?^?^?}'/>
<retval type64='i' type='l'/>
</function>
<function name='FSPathCopyObjectSync'>
<arg type='*'/>
<arg type='*'/>
<arg type='^{__CFString=}'/>
<arg type='^*'/>
<arg type64='I' type='L'/>
<retval type64='i' type='l'/>
</function>
<function name='FSPathFileOperationCopyStatus'>
<arg type='^{__FSFileOperation=}'/>
<arg type='^*'/>
<arg type='^I'/>
<arg type='^i'/>
<arg type='^^{__CFDictionary}'/>
<arg type='^^v'/>
<retval type64='i' type='l'/>
</function>
<function name='FSPathGetTemporaryDirectoryForReplaceObject'>
<arg type='*'/>
<arg type='*'/>
<arg type64='I' type='L'/>
<arg type64='I' type='L'/>
<retval type64='i' type='l'/>
</function>
<function name='FSPathMakeRef'>
<arg type='*'/>
<arg type='^{FSRef=[80C]}'/>
<arg type='^B'/>
<retval type64='i' type='l'/>
</function>
<function name='FSPathMakeRefWithOptions'>
<arg type='*'/>
<arg type64='I' type='L'/>
<arg type='^{FSRef=[80C]}'/>
<arg type='^B'/>
<retval type64='i' type='l'/>
</function>
<function name='FSPathMoveObjectAsync'>
<arg type='^{__FSFileOperation=}'/>
<arg type='*'/>
<arg type='*'/>
<arg type='^{__CFString=}'/>
<arg type64='I' type='L'/>
<arg function_pointer='true' type='^?'>
<arg type='^{__FSFileOperation=}'/>
<arg type='*'/>
<arg type64='I' type='L'/>
<arg type64='i' type='l'/>
<arg type='^{__CFDictionary=}'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type='d'/>
<arg type64='^{FSFileOperationClientContext=q^v^?^?^?}' type='^{FSFileOperationClientContext=i^v^?^?^?}'/>
<retval type64='i' type='l'/>
</function>
<function name='FSPathMoveObjectSync'>
<arg type='*'/>
<arg type='*'/>
<arg type='^{__CFString=}'/>
<arg type='^*'/>
<arg type64='I' type='L'/>
<retval type64='i' type='l'/>
</function>
<function name='FSPathMoveObjectToTrashAsync'>
<arg type='^{__FSFileOperation=}'/>
<arg type='*'/>
<arg type64='I' type='L'/>
<arg function_pointer='true' type='^?'>
<arg type='^{__FSFileOperation=}'/>
<arg type='*'/>
<arg type64='I' type='L'/>
<arg type64='i' type='l'/>
<arg type='^{__CFDictionary=}'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type='d'/>
<arg type64='^{FSFileOperationClientContext=q^v^?^?^?}' type='^{FSFileOperationClientContext=i^v^?^?^?}'/>
<retval type64='i' type='l'/>
</function>
<function name='FSPathMoveObjectToTrashSync'>
<arg type='*'/>
<arg type='^*'/>
<arg type64='I' type='L'/>
<retval type64='i' type='l'/>
</function>
<function name='FSPathReplaceObject'>
<arg type='*'/>
<arg type='*'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type='*'/>
<arg type64='I' type='L'/>
<retval type64='i' type='l'/>
</function>
<function name='FSReadFork'>
<arg type64='i' type='s'/>
<arg type='S'/>
<arg type='q'/>
<arg type64='Q' type='L'/>
<arg type='^v'/>
<arg type64='^Q' type='^I'/>
<retval type='s'/>
</function>
<function name='FSRefMakePath'>
<arg type='^{FSRef=[80C]}'/>
<arg type='*'/>
<arg type64='I' type='L'/>
<retval type64='i' type='l'/>
</function>
<function name='FSRenameUnicode'>
<arg type='^{FSRef=[80C]}'/>
<arg type64='Q' type='L'/>
<arg type='^S'/>
<arg type64='I' type='L'/>
<arg type='^{FSRef=[80C]}'/>
<retval type='s'/>
</function>
<function name='FSReplaceObject'>
<arg type='^{FSRef=[80C]}'/>
<arg type='^{FSRef=[80C]}'/>
<arg type='^{__CFString=}'/>
<arg type='^{__CFString=}'/>
<arg type='^{FSRef=[80C]}'/>
<arg type64='I' type='L'/>
<arg type='^{FSRef=[80C]}'/>
<retval type64='i' type='l'/>
</function>
<function name='FSResolveNodeID'>
<arg type='s'/>
<arg type64='I' type='L'/>
<arg type='^{FSRef=[80C]}'/>
<retval type64='i' type='l'/>
</function>
<function name='FSSetCatalogInfo'>
<arg type='^{FSRef=[80C]}'/>
<arg type64='I' type='L'/>
<arg type64='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{FSPermissionInfo=IICCS^{__FSFileSecurity}}[16C][16C]QQQQII}' type='^{FSCatalogInfo=SsIICCCC{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}[4L][16C][16C]QQQQII}'/>
<retval type='s'/>
</function>
<function name='FSSetForkPosition'>
<arg type64='i' type='s'/>
<arg type='S'/>
<arg type='q'/>
<retval type='s'/>
</function>
<function name='FSSetForkSize'>
<arg type64='i' type='s'/>
<arg type='S'/>
<arg type='q'/>
<retval type='s'/>
</function>
<function name='FSSetVolumeInfo'>
<arg type='s'/>
<arg type64='I' type='L'/>
<arg type64='^{FSVolumeInfo={UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}IIQQIIIIIII[32C]SSSSi}' type='^{FSVolumeInfo={UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}{UTCDateTime=SIS}IIQQIIIIIII[32C]SSSSs}'/>
<retval type='s'/>
</function>
<function name='FSUnlinkObject'>
<arg type='^{FSRef=[80C]}'/>
<retval type='s'/>
</function>
<function name='FSUnlockRange'>
<arg type64='i' type='s'/>
<arg type='S'/>
<arg type='q'/>
<arg type='Q'/>
<arg type='^Q'/>
<retval type64='i' type='l'/>
</function>
<function name='FSUnmountVolumeAsync'>
<arg type='s'/>
<arg type64='I' type='L'/>
<arg type='^{OpaqueFSVolumeOperation=}'/>
<arg type='^v'/>
<arg function_pointer='true' type='^?'>
<arg type='^{OpaqueFSVolumeOperation=}'/>
<arg type='^v'/>
<arg type64='i' type='l'/>
<arg type='s'/>
<arg type='i'/>
<retval type='v'/>
</arg>
<arg type='^{__CFRunLoop=}'/>
<arg type='^{__CFString=}'/>
<retval type64='i' type='l'/>
</function>
<function name='FSUnmountVolumeSync'>
<arg type='s'/>
<arg type64='I' type='L'/>
<arg type='^i'/>
<retval type64='i' type='l'/>
</function>
<function name='FSVolumeMount'>
<arg type='*'/>
<arg type='^s'/>
<retval type64='i' type='l'/>
</function>
<function name='FSWriteFork'>
<arg type64='i' type='s'/>
<arg type='S'/>
<arg type='q'/>
<arg type64='Q' type='L'/>
<arg type='^v'/>
<arg type64='^Q' type='^I'/>
<retval type='s'/>
</function>
<function name='InvokeFNSubscriptionUPP'>
<arg type64='I' type='L'/>
<arg type64='I' type='L'/>
<arg type='^v'/>
<arg type='^{OpaqueFNSubscriptionRef=}'/>
<arg function_pointer='true' type='^?'>
<arg type64='I' type='L'/>
<arg type64='I' type='L'/>
<arg type='^v'/>
<arg type='^{OpaqueFNSubscriptionRef=}'/>
<retval type='v'/>
</arg>
</function>
<function name='InvokeFSVolumeEjectUPP'>
<arg type='^{OpaqueFSVolumeOperation=}'/>
<arg type='^v'/>
<arg type64='i' type='l'/>
<arg type='s'/>
<arg type='i'/>
<arg function_pointer='true' type='^?'>
<arg type='^{OpaqueFSVolumeOperation=}'/>
<arg type='^v'/>
<arg type64='i' type='l'/>
<arg type='s'/>
<arg type='i'/>
<retval type='v'/>
</arg>
</function>
<function name='InvokeFSVolumeMountUPP'>
<arg type='^{OpaqueFSVolumeOperation=}'/>
<arg type='^v'/>
<arg type64='i' type='l'/>
<arg type='s'/>
<arg function_pointer='true' type='^?'>
<arg type='^{OpaqueFSVolumeOperation=}'/>
<arg type='^v'/>
<arg type64='i' type='l'/>
<arg type='s'/>
<retval type='v'/>
</arg>
</function>
<function name='InvokeFSVolumeUnmountUPP'>
<arg type='^{OpaqueFSVolumeOperation=}'/>
<arg type='^v'/>
<arg type64='i' type='l'/>
<arg type='s'/>
<arg type='i'/>
<arg function_pointer='true' type='^?'>
<arg type='^{OpaqueFSVolumeOperation=}'/>
<arg type='^v'/>
<arg type64='i' type='l'/>
<arg type='s'/>
<arg type='i'/>
<retval type='v'/>
</arg>
</function>
<function name='InvokeIOCompletionUPP'>
<arg type64='^v' type='^(ParamBlockRec={IOParam=^{QElem}ss*^?s*sscc**iisi}{FileParam=^{QElem}ss*^?s*ssccscc{FInfo=IIS{Point=ss}s}ISiiSiiII}{VolumeParam=^{QElem}ss*^?s*sIsIISSSsSIISIS}{CntrlParam=^{QElem}ss*^?s*sss[11s]}{SlotDevParam=^{QElem}ss*^?s*sscc*scc}{MultiDevParam=^{QElem}ss*^?s*sscc*s*})'/>
<arg function_pointer='true' type='^?'>
<arg type64='^v' type='^(ParamBlockRec={IOParam=^{QElem}ss*^?s*sscc**iisi}{FileParam=^{QElem}ss*^?s*ssccscc{FInfo=IIS{Point=ss}s}ISiiSiiII}{VolumeParam=^{QElem}ss*^?s*sIsIISSSsSIISIS}{CntrlParam=^{QElem}ss*^?s*sss[11s]}{SlotDevParam=^{QElem}ss*^?s*sscc*scc}{MultiDevParam=^{QElem}ss*^?s*sscc*s*})'/>
<retval type='v'/>
</arg>
</function>
<function name='NewFNSubscriptionUPP'>
<arg function_pointer='true' type='^?'>
<arg type64='I' type='L'/>
<arg type64='I' type='L'/>
<arg type='^v'/>
<arg type='^{OpaqueFNSubscriptionRef=}'/>
<retval type='v'/>
</arg>
<retval function_pointer='true' type='^?'>
<arg type64='I' type='L'/>
<arg type64='I' type='L'/>
<arg type='^v'/>
<arg type='^{OpaqueFNSubscriptionRef=}'/>
<retval type='v'/>
</retval>
</function>
<function name='NewFSVolumeEjectUPP'>
<arg function_pointer='true' type='^?'>
<arg type='^{OpaqueFSVolumeOperation=}'/>
<arg type='^v'/>
<arg type64='i' type='l'/>
<arg type='s'/>
<arg type='i'/>
<retval type='v'/>
</arg>
<retval function_pointer='true' type='^?'>
<arg type='^{OpaqueFSVolumeOperation=}'/>
<arg type='^v'/>
<arg type64='i' type='l'/>
<arg type='s'/>
<arg type='i'/>
<retval type='v'/>
</retval>
</function>
<function name='NewFSVolumeMountUPP'>
<arg function_pointer='true' type='^?'>
<arg type='^{OpaqueFSVolumeOperation=}'/>
<arg type='^v'/>
<arg type64='i' type='l'/>
<arg type='s'/>
<retval type='v'/>
</arg>
<retval function_pointer='true' type='^?'>
<arg type='^{OpaqueFSVolumeOperation=}'/>
<arg type='^v'/>
<arg type64='i' type='l'/>
<arg type='s'/>
<retval type='v'/>
</retval>
</function>
<function name='NewFSVolumeUnmountUPP'>
<arg function_pointer='true' type='^?'>
<arg type='^{OpaqueFSVolumeOperation=}'/>
<arg type='^v'/>
<arg type64='i' type='l'/>
<arg type='s'/>
<arg type='i'/>
<retval type='v'/>
</arg>
<retval function_pointer='true' type='^?'>
<arg type='^{OpaqueFSVolumeOperation=}'/>
<arg type='^v'/>
<arg type64='i' type='l'/>
<arg type='s'/>
<arg type='i'/>
<retval type='v'/>
</retval>
</function>
<function name='NewIOCompletionUPP'>
<arg function_pointer='true' type='^?'>
<arg type64='^v' type='^(ParamBlockRec={IOParam=^{QElem}ss*^?s*sscc**iisi}{FileParam=^{QElem}ss*^?s*ssccscc{FInfo=IIS{Point=ss}s}ISiiSiiII}{VolumeParam=^{QElem}ss*^?s*sIsIISSSsSIISIS}{CntrlParam=^{QElem}ss*^?s*sss[11s]}{SlotDevParam=^{QElem}ss*^?s*sscc*scc}{MultiDevParam=^{QElem}ss*^?s*sscc*s*})'/>
<retval type='v'/>
</arg>
<retval function_pointer='true' type='^?'>
<arg type64='^v' type='^(ParamBlockRec={IOParam=^{QElem}ss*^?s*sscc**iisi}{FileParam=^{QElem}ss*^?s*ssccscc{FInfo=IIS{Point=ss}s}ISiiSiiII}{VolumeParam=^{QElem}ss*^?s*sIsIISSSsSIISIS}{CntrlParam=^{QElem}ss*^?s*sss[11s]}{SlotDevParam=^{QElem}ss*^?s*sscc*scc}{MultiDevParam=^{QElem}ss*^?s*sscc*s*})'/>
<retval type='v'/>
</retval>
</function>
<function name='PBAllocateForkAsync'>
<arg type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
</function>
<function name='PBAllocateForkSync'>
<arg type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval type='s'/>
</function>
<function name='PBCatalogSearchAsync'>
<arg type64='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}QQI^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}' type='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}III^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}'/>
</function>
<function name='PBCatalogSearchSync'>
<arg type64='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}QQI^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}' type='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}III^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}'/>
<retval type='s'/>
</function>
<function name='PBCloseForkAsync'>
<arg type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
</function>
<function name='PBCloseForkSync'>
<arg type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval type='s'/>
</function>
<function name='PBCloseIteratorAsync'>
<arg type64='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}QQI^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}' type='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}III^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}'/>
</function>
<function name='PBCloseIteratorSync'>
<arg type64='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}QQI^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}' type='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}III^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}'/>
<retval type='s'/>
</function>
<function name='PBCompareFSRefsAsync'>
<arg type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
</function>
<function name='PBCompareFSRefsSync'>
<arg type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval type='s'/>
</function>
<function name='PBCreateDirectoryUnicodeAsync'>
<arg type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
</function>
<function name='PBCreateDirectoryUnicodeSync'>
<arg type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval type='s'/>
</function>
<function name='PBCreateFileAndOpenForkUnicodeAsync'>
<arg type64='^{FSRefForkIOParam=^{QElem}ss*^?s^{FSRef}Q^SI^{FSCatalogInfo}Q^ScCi^{FSRef}}' type='^{FSRefForkIOParam=^{QElem}ss*^?s^{FSRef}I^SI^{FSCatalogInfo}I^ScCs^{FSRef}}'/>
</function>
<function name='PBCreateFileAndOpenForkUnicodeSync'>
<arg type64='^{FSRefForkIOParam=^{QElem}ss*^?s^{FSRef}Q^SI^{FSCatalogInfo}Q^ScCi^{FSRef}}' type='^{FSRefForkIOParam=^{QElem}ss*^?s^{FSRef}I^SI^{FSCatalogInfo}I^ScCs^{FSRef}}'/>
<retval type64='i' type='l'/>
</function>
<function name='PBCreateFileUnicodeAsync'>
<arg type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
</function>
<function name='PBCreateFileUnicodeSync'>
<arg type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval type='s'/>
</function>
<function name='PBCreateForkAsync'>
<arg type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
</function>
<function name='PBCreateForkSync'>
<arg type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval type='s'/>
</function>
<function name='PBDeleteForkAsync'>
<arg type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
</function>
<function name='PBDeleteForkSync'>
<arg type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval type='s'/>
</function>
<function name='PBDeleteObjectAsync'>
<arg type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
</function>
<function name='PBDeleteObjectSync'>
<arg type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval type='s'/>
</function>
<function name='PBExchangeObjectsAsync'>
<arg type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
</function>
<function name='PBExchangeObjectsSync'>
<arg type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval type='s'/>
</function>
<function name='PBFSCopyFileAsync'>
<arg type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval type64='i' type='l'/>
</function>
<function name='PBFSCopyFileSync'>
<arg type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval type64='i' type='l'/>
</function>
<function name='PBFSResolveNodeIDAsync'>
<arg type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval type64='i' type='l'/>
</function>
<function name='PBFSResolveNodeIDSync'>
<arg type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval type64='i' type='l'/>
</function>
<function name='PBFlushForkAsync'>
<arg type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
</function>
<function name='PBFlushForkSync'>
<arg type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval type='s'/>
</function>
<function name='PBFlushVolumeAsync'>
<arg type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval type64='i' type='l'/>
</function>
<function name='PBFlushVolumeSync'>
<arg type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval type64='i' type='l'/>
</function>
<function name='PBGetCatalogInfoAsync'>
<arg type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
</function>
<function name='PBGetCatalogInfoBulkAsync'>
<arg type64='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}QQI^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}' type='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}III^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}'/>
</function>
<function name='PBGetCatalogInfoBulkSync'>
<arg type64='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}QQI^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}' type='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}III^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}'/>
<retval type='s'/>
</function>
<function name='PBGetCatalogInfoSync'>
<arg type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval type='s'/>
</function>
<function name='PBGetForkCBInfoAsync'>
<arg type64='^{FSForkCBInfoParam=^{QElem}ss*^?sisis^{FSRef}^{FSForkInfo}^{HFSUniStr255}}' type='^{FSForkCBInfoParam=^{QElem}ss*^?sssss^{FSRef}^{FSForkInfo}^{HFSUniStr255}}'/>
</function>
<function name='PBGetForkCBInfoSync'>
<arg type64='^{FSForkCBInfoParam=^{QElem}ss*^?sisis^{FSRef}^{FSForkInfo}^{HFSUniStr255}}' type='^{FSForkCBInfoParam=^{QElem}ss*^?sssss^{FSRef}^{FSForkInfo}^{HFSUniStr255}}'/>
<retval type='s'/>
</function>
<function name='PBGetForkPositionAsync'>
<arg type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
</function>
<function name='PBGetForkPositionSync'>
<arg type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval type='s'/>
</function>
<function name='PBGetForkSizeAsync'>
<arg type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
</function>
<function name='PBGetForkSizeSync'>
<arg type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval type='s'/>
</function>
<function name='PBGetVolumeInfoAsync'>
<arg type='^{FSVolumeInfoParam=^{QElem}ss*^?s*sII^{FSVolumeInfo}^{HFSUniStr255}^{FSRef}}'/>
</function>
<function name='PBGetVolumeInfoSync'>
<arg type='^{FSVolumeInfoParam=^{QElem}ss*^?s*sII^{FSVolumeInfo}^{HFSUniStr255}^{FSRef}}'/>
<retval type='s'/>
</function>
<function name='PBIterateForksAsync'>
<arg type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
</function>
<function name='PBIterateForksSync'>
<arg type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval type='s'/>
</function>
<function name='PBMakeFSRefUnicodeAsync'>
<arg type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
</function>
<function name='PBMakeFSRefUnicodeSync'>
<arg type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval type='s'/>
</function>
<function name='PBMoveObjectAsync'>
<arg type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
</function>
<function name='PBMoveObjectSync'>
<arg type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval type='s'/>
</function>
<function name='PBOpenForkAsync'>
<arg type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
</function>
<function name='PBOpenForkSync'>
<arg type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval type='s'/>
</function>
<function name='PBOpenIteratorAsync'>
<arg type64='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}QQI^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}' type='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}III^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}'/>
</function>
<function name='PBOpenIteratorSync'>
<arg type64='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}QQI^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}' type='^{FSCatalogBulkParam=^{QElem}ss*^?sBCI^{OpaqueFSIterator}^{FSRef}III^{FSCatalogInfo}^{FSRef}^{FSSpec}^{HFSUniStr255}^{FSSearchParams}}'/>
<retval type='s'/>
</function>
<function name='PBReadForkAsync'>
<arg type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
</function>
<function name='PBReadForkSync'>
<arg type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval type='s'/>
</function>
<function name='PBRenameUnicodeAsync'>
<arg type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
</function>
<function name='PBRenameUnicodeSync'>
<arg type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval type='s'/>
</function>
<function name='PBSetCatalogInfoAsync'>
<arg type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
</function>
<function name='PBSetCatalogInfoSync'>
<arg type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval type='s'/>
</function>
<function name='PBSetForkPositionAsync'>
<arg type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
</function>
<function name='PBSetForkPositionSync'>
<arg type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval type='s'/>
</function>
<function name='PBSetForkSizeAsync'>
<arg type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
</function>
<function name='PBSetForkSizeSync'>
<arg type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval type='s'/>
</function>
<function name='PBSetVolumeInfoAsync'>
<arg type='^{FSVolumeInfoParam=^{QElem}ss*^?s*sII^{FSVolumeInfo}^{HFSUniStr255}^{FSRef}}'/>
</function>
<function name='PBSetVolumeInfoSync'>
<arg type='^{FSVolumeInfoParam=^{QElem}ss*^?s*sII^{FSVolumeInfo}^{HFSUniStr255}^{FSRef}}'/>
<retval type='s'/>
</function>
<function name='PBUnlinkObjectAsync'>
<arg type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
</function>
<function name='PBUnlinkObjectSync'>
<arg type64='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}Q^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}' type='^{FSRefParam=^{QElem}ss*^?s*ssCC^{FSRef}I^{FSCatalogInfo}I^SI^{FSSpec}^{FSRef}^{FSRef}I^{HFSUniStr255}}'/>
<retval type='s'/>
</function>
<function name='PBWriteForkAsync'>
<arg type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
</function>
<function name='PBWriteForkSync'>
<arg type64='^{FSForkIOParam=^{QElem}ss*^?s^vsiCc^{FSRef}*IISqSQQ^S{CatPositionRec=i[6s]}^{HFSUniStr255}}' type='^{FSForkIOParam=^{QElem}ss*^?s^vssCc^{FSRef}*IISqSQI^S{CatPositionRec=i[6s]}^{HFSUniStr255}}'/>
<retval type='s'/>
</function>
<function name='PBXLockRangeAsync'>
<arg type64='^{FSRangeLockParam=^{QElem}ss*^?siQSqQ}' type='^{FSRangeLockParam=^{QElem}ss*^?ssQSqQ}'/>
<retval type64='i' type='l'/>
</function>
<function name='PBXLockRangeSync'>
<arg type64='^{FSRangeLockParam=^{QElem}ss*^?siQSqQ}' type='^{FSRangeLockParam=^{QElem}ss*^?ssQSqQ}'/>
<retval type64='i' type='l'/>
</function>
<function name='PBXUnlockRangeAsync'>
<arg type64='^{FSRangeLockParam=^{QElem}ss*^?siQSqQ}' type='^{FSRangeLockParam=^{QElem}ss*^?ssQSqQ}'/>
<retval type64='i' type='l'/>
</function>
<function name='PBXUnlockRangeSync'>
<arg type64='^{FSRangeLockParam=^{QElem}ss*^?siQSqQ}' type='^{FSRangeLockParam=^{QElem}ss*^?ssQSqQ}'/>
<retval type64='i' type='l'/>
</function>
</signatures>
